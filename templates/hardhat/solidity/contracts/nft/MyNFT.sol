// SPDX-License-Identifier: MIT

pragma solidity ^0.8.0;

import "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol";
import "@openzeppelin/contracts/access/Ownable.sol";

/**
 * @title MyNFT
 * @dev Basic ERC721 token with auto-incrementing token IDs.
 * The owner can mint new tokens. Token URIs are autogenerated based on a base URI.
 */
contract MyNFT is ERC721Enumerable, Ownable {
    uint256 private _currentTokenId;
    string private _baseTokenURI;

    constructor(
        string memory name,
        string memory symbol,
        string memory baseTokenURI,
        address initialOwner
    ) ERC721(name, symbol) Ownable(initialOwner) {
        _baseTokenURI = baseTokenURI;
    }

    function _baseURI() internal view virtual override returns (string memory) {
        return _baseTokenURI;
    }

    function mint(address to) external onlyOwner {
        uint256 tokenId = _currentTokenId;
        _mint(to, tokenId);
        _currentTokenId += 1;
    }
}
